<?php

namespace PageBundle\Repository\Nodes;

use Doctrine\ORM\EntityRepository,
    PageBundle\Entity\Nodes\Page as PageEntity;

/**
 * Page
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Page extends EntityRepository
{
    public function findAll()
    {
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('p')
            ->from('PageBundle\Entity\Nodes\Page', 'p')
            ->where(
                $query->expr()->isNull('p.endTime')
            )
            ->getQuery()
            ->getResult();

        return $resultSet;
    }

    public function findByCategory($category)
    {
        return $this->_em->getRepository('PageBundle\Entity\Nodes\Page')
            ->findBy(array('category' => $category, 'endTime' => null));
    }

    public function findByParent($parent)
    {
        return $this->_em->getRepository('PageBundle\Entity\Nodes\Page')
            ->findBy(array('parent' => $parent, 'endTime' => null));
    }

    public function findOneByName($name, PageEntity $parent = null)
    {
        $query = $this->_em->createQueryBuilder();
        $query->select('p')
            ->from('PageBundle\Entity\Nodes\Page', 'p');

        if (null === $parent) {
            $where = $query->expr()->andX(
                $query->expr()->eq('p.name', ':name'),
                $query->expr()->isNull('p.endTime')
            );
        } else {
            $where = $query->expr()->andX(
                $query->expr()->eq('p.parent', ':parent'),
                $query->expr()->andX(
                    $query->expr()->eq('p.name', ':name'),
                    $query->expr()->isNull('p.endTime')
                )
            );
        }

        $query->where($where)
            ->setParameter('name', $name);

        if (null !== $parent)
            $query->setParameter('parent', $parent);

        $resultSet = $query->setMaxResults(1)
            ->getQuery()
            ->getResult();

        if (isset($resultSet[0]))
            return $resultSet[0];

        return null;
    }
}
