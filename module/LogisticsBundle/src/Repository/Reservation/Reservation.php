<?php

namespace LogisticsBundle\Repository\Reservation;

use Doctrine\ORM\EntityRepository;

/**
 * Reservation
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Reservation extends EntityRepository
{
    
    public function findAll() {
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('r')
        ->from('LogisticsBundle\Entity\Reservation\Reservation', 'r')
        ->getQuery()
        ->getResult();
    
        return $resultSet;
    }
    
    public function findAllConflicting($startDate, $endDate, $resource) {

        /*
         * TODO : validate that no reservation for this time is made yet. The check is:
        *
        * No other reservation such that:
        * other_start_date < start_date < other_end_date
        * other_start_date < end_date < other_end_date
        *
        * No other reservation such that
        * start_date < other_start_date < end_date
        * start_date < other_end_date < end_date
        *
        * Summarized: (this is probably harder to check)
        * For all other reservations:
        * start_date < other_end_date => end_date < other_start_date
        * end_date > other_start_date => start_date > other_end_date
        *
        * ==========================================================
        *
        * Thus:
        * No other reservations such that
        * start_date < other_end_date && end_date > other_start_date
        *
        * assert that the following query returns empty:
        * SELECT r FROM Reservation
        *     WHERE r.resource == :resource
        *     AND r.start_date < :end_date
        *     AND r.end_date > :start_date
        */
        
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('r')
            ->from('LogisticsBundle\Entity\Reservation\Reservation', 'r')
            ->where(
                $query->expr()->andx(
                    $query->expr()->eq('r.resource', ':resource'),
                    $query->expr()->lt('r.startDate', ':end_date'),
                    $query->expr()->gt('r.endDate', ':start_date')
                )
            )
            ->setParameter('resource', $resource)
            ->setParameter('start_date', $startDate)
            ->setParameter('end_date', $endDate)
            ->getQuery()
            ->getResult();
        
        return $resultSet;
    }
    
}
