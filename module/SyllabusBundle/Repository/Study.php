<?php

namespace SyllabusBundle\Repository;

use CommonBundle\Entity\General\AcademicYear;
use SyllabusBundle\Entity\Study\Combination as CombinationEntity;

/**
 * Study
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Study extends \CommonBundle\Component\Doctrine\ORM\EntityRepository
{
    /**
     * @param  AcademicYear $academicYear
     * @return \Doctrine\ORM\Query
     */
    public function findAllByAcademicYearQuery(AcademicYear $academicYear)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('s', 'c')
            ->from('SyllabusBundle\Entity\Study', 's')
            ->innerJoin('s.combination', 'c')
            ->where(
                $query->expr()->eq('s.academicYear', ':academicYear')
            )
            ->setParameter('academicYear', $academicYear)
            ->orderBy('c.title', 'ASC')
            ->addOrderBy('c.phase', 'ASC')
            ->getQuery();
    }

    /**
     * @param  CombinationEntity $combination
     * @param  AcademicYear      $academicYear
     * @return \SyllabusBundle\Entity\Study
     */
    public function findOneByCombinationAndAcademicYear(CombinationEntity $combination, AcademicYear $academicYear)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('s')
            ->from('SyllabusBundle\Entity\Study', 's')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('s.academicYear', ':academicYear'),
                    $query->expr()->eq('s.combination', ':combination')
                )
            )
            ->setParameter('academicYear', $academicYear)
            ->setParameter('combination', $combination)
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * @param  AcademicYear $academicYear
     * @return \Doctrine\ORM\Query
     */
    public function findAllByTitleAndAcademicYearQuery($title, AcademicYear $academicYear)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('s', 'c')
            ->from('SyllabusBundle\Entity\Study', 's')
            ->innerJoin('s.combination', 'c')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('s.academicYear', ':academicYear'),
                    $query->expr()->like($query->expr()->lower('c.title'), ':title')
                )
            )
            ->setParameter('academicYear', $academicYear)
            ->setParameter('title', '%' . strtolower($title) . '%')
            ->orderBy('c.title', 'ASC')
            ->addOrderBy('c.phase', 'ASC')
            ->getQuery();
    }
}
