<?php

namespace SyllabusBundle\Repository;

use CommonBundle\Entity\General\AcademicYear,
    Doctrine\ORM\EntityRepository,
    SyllabusBundle\Entity\Group as GroupEntity,
    SyllabusBundle\Entity\Study as StudyEntity;

/**
 * Group
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Group extends EntityRepository
{
    public function findAll()
    {
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('d')
            ->from('SyllabusBundle\Entity\Group', 'd')
            ->getQuery()
            ->getResult();

        return $resultSet;
    }

    public function findAllCvBook()
    {
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('d')
            ->from('SyllabusBundle\Entity\Group', 'd')
            ->where(
                $query->expr()->eq('d.cvBook', 'true')
            )
            ->orderBy('d.name', 'ASC')
            ->getQuery()
            ->getResult();

        return $resultSet;
    }

    public function findNbStudentsByGroupAndAcademicYear(GroupEntity $group, AcademicYear $academicYear)
    {
        $studies = $this->_em
            ->getRepository('SyllabusBundle\Entity\StudyGroupMap')
            ->findAllByGroupAndAcademicYear($group, $academicYear);

        $ids = array(0);
        foreach($studies as $study)
            $ids[] = $study->getStudy()->getId();

        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select($query->expr()->count('e'))
            ->from('SecretaryBundle\Entity\Syllabus\StudyEnrollment', 'e')
            ->where(
                $query->expr()->andX(
                    $query->expr()->in('e.study', $ids),
                    $query->expr()->eq('e.academicYear', ':academicYear')
                )
            )
            ->setParameter('academicYear', $academicYear)
            ->getQuery()
            ->getScalarResult();

        if (isset($resultSet[0][1]))
            return $resultSet[0][1];

        return 0;
    }
}
