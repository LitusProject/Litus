{% extends 'site/base.twig' %}

{% block content %}
    <div class="page-header">
        <h1>{% if group %}{{ group.getTitle(language) }}: {% endif %}{{ specification.getTitle(language) }}</h1>
    </div>

    {% if group %}
        {% include 'form/form/partials/group-progress.twig' %}
    {% endif %}

    {% autoescape false %}
        {{ markdown(specification.getIntroduction(language)) }}
    {% endautoescape %}

    <hr/>

    {% if not form %}
        <div class="alert alert-warning">
            {{ translate(message) }}
        </div>
    {% else %}
        {% import 'site/partials/form.twig' as forms %}
        {{ forms.renderForm(form) }}
    {% endif %}
{% endblock %}

{% block content_script %}
    <script type="text/javascript">
        $(document).ready(function () {
            $('input[name="save_as_draft"]:disabled').addClass('disabled').removeAttr('disabled').tooltip({'trigger': 'hover', 'title': '{{ translate('You have already a draft of this form') }}'}).click(function (e) {
                e.preventDefault();
            });

            $('span[data-toggle=tooltip]').tooltip({'trigger': 'hover'});
            $('input[type=file]').each(function () {
                if ($(this).data('file')) {
                    $(this).closest('.fileinput').append(
                        $('<div>', {'class': 'fileActions'}).append(
                            $('<a>', {'class': 'btn btn-xs btn-default', 'href': '{{ url('form_view', {'action': 'downloadFile'}) }}' + $(this).data('file')}).html('{{ translate('Download') }}'),
                            ' ',
                            $('<button>', {'class': 'btn btn-xs btn-danger'}).html('{{ translate('Remove') }}').click(function (e) {
                                e.preventDefault();
                                $(this).closest('.fileinput').append(
                                    $('<input>', {'type': 'hidden', 'name': $(this).closest('.fileinput').find('input[type="file"]').attr('id') + '-removed'}).val(1)
                                );
                                $(this).closest('.fileActions').remove();
                            })
                        )
                    );
                }
            });

            var form = $('#content form');
            form.find('input, select').each(function () {
                var $this = $(this);
                if ($this.data('visible_if_element') !== undefined) {
                    $this.closest('.form-group').hide();
                    form.find('#field-' + $this.data('visible_if_element')).bind('change keyup', function () {
                        if ($(this).attr('type') == 'text') {
                            if ($(this).val() !== '') {
                                $this.closest('.form-group').show();
                            } else {
                                $this.closest('.form-group').hide();
                                resetElement($this);
                            }
                            $this.trigger('change');
                        } else if ($(this).attr('type') == 'checkbox') {
                            if (
                                ($(this).is(':checked') && $this.data('visible_if_value') == '1')
                                    || (!$(this).is(':checked') && $this.data('visible_if_value') == '0')
                                && $(this).is(':visible')
                            ) {
                                $this.closest('.form-group').show();
                            } else {
                                $this.closest('.form-group').hide();
                                resetElement($this);
                            }
                            $this.trigger('change');
                        } else if ($(this).is('select')) {
                            if ($(this).find('option:selected').html() == $this.data('visible_if_value') && $(this).is(':visible')) {
                                $this.closest('.form-group').show();
                            } else {
                                $this.closest('.form-group').hide();
                                resetElement($this);
                            }
                            $this.trigger('change');
                        }
                    }).trigger('change');
                }
            });
        });

        function resetElement(element) {
            if (element.attr('type') == 'text') {
                element.val('');
            } else if (element.attr('type') == 'checkbox') {
                element.prop('checked', false);
            } else if (element.is('select')) {
                element.find('option').removeAttr('selected');
                element.find('option:first').attr('selected','selected');
            }
        }
    </script>
{% endblock %}
