<?php

namespace FormBundle\Repository\Node;

use DateTime,
    CommonBundle\Component\Doctrine\ORM\EntityRepository;

/**
 * Group
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Group extends EntityRepository
{
    public function findAllQuery()
    {
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('n')
            ->from('FormBundle\Entity\Node\Group', 'n')
            ->orderBy('n.creationTime', 'DESC')
            ->getQuery();

        return $resultSet;
    }

    public function findAllActive()
    {
        $query = $this->_em->createQueryBuilder();
        $forms = $query->select('f.id')
            ->from('FormBundle\Entity\Node\Form', 'f')
            ->where(
                $query->expr()->gt('f.endDate', ':now')
            )
            ->setParameter('now', new DateTime())
            ->getQuery()
            ->getResult();

        $ids = array(0);
        foreach($forms as $form) {
            $ids[] = $form['id'];
        }

        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('m')
            ->from('FormBundle\Entity\Node\Group\Mapping', 'm')
            ->where(
                $query->expr()->in('m.form', $ids)
            )
            ->getQuery()
            ->getResult();

        $groups = array();
        foreach($resultSet as $group) {
            $groups[$group->getGroup()->getForms()[0]->getForm()->getStartDate()->getTimestamp()] = $group->getGroup();
        }

        return array_values($groups);
    }

    public function findAllOld()
    {
        $query = $this->_em->createQueryBuilder();
        $forms = $query->select('f.id')
            ->from('FormBundle\Entity\Node\Form', 'f')
            ->where(
                $query->expr()->lt('f.endDate', ':now')
            )
            ->setParameter('now', new DateTime())
            ->getQuery()
            ->getResult();

        $ids = array(0);
        foreach($forms as $form) {
            $ids[] = $form['id'];
        }

        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('m')
            ->from('FormBundle\Entity\Node\Group\Mapping', 'm')
            ->where(
                $query->expr()->in('m.form', $ids)
            )
            ->getQuery()
            ->getResult();

        $groups = array();
        foreach($resultSet as $group) {
            $groups[$group->getGroup()->getForms()[0]->getForm()->getStartDate()->getTimestamp()] = $group->getGroup();
        }

        return array_values($groups);
    }
}