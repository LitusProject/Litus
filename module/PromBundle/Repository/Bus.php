<?php
/**
 * Litus is a project by a group of students from the KU Leuven. The goal is to create
 * various applications to support the IT needs of student unions.
 *
 * @author Niels Avonds <niels.avonds@litus.cc>
 * @author Karsten Daemen <karsten.daemen@litus.cc>
 * @author Koen Certyn <koen.certyn@litus.cc>
 * @author Bram Gotink <bram.gotink@litus.cc>
 * @author Dario Incalza <dario.incalza@litus.cc>
 * @author Pieter Maene <pieter.maene@litus.cc>
 * @author Kristof MariÃ«n <kristof.marien@litus.cc>
 * @author Lars Vierbergen <lars.vierbergen@litus.cc>
 * @author Daan Wendelen <daan.wendelen@litus.cc>
 *
 * @license http://litus.cc/LICENSE
 */

namespace PromBundle\Repository;

use CommonBundle\Component\Doctrine\ORM\EntityRepository,
    CommonBundle\Entity\General\AcademicYear;

/**
 * Bus
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Bus extends EntityRepository
{
    /**
     * @param  AcademicYear $academicYear
     * @return array
     */
    public function getGoBusses(AcademicYear $academicYear)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        $resultArray = $query->select('b')
            ->from('PromBundle\Entity\Bus', 'b')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('b.direction', ':direction'),
                    $query->expr()->eq('b.academicYear', ':academicYear')
                )
            )
            ->setParameter('direction', 'Go')
            ->setParameter('academicYear', $academicYear)
            ->orderBy('b.departureTime', 'ASC')
            ->getQuery()
            ->getResult();

        return $resultArray;
    }

    /**
     * @param  AcademicYear $academicYear
     * @return array
     */
    public function getReturnBusses(AcademicYear $academicYear)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        $resultArray = $query->select('b')
            ->from('PromBundle\Entity\Bus', 'b')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('b.direction', ':direction'),
                    $query->expr()->eq('b.academicYear', ':academicYear')
                )
            )
            ->setParameter('direction', 'Return')
            ->setParameter('academicYear', $academicYear)
            ->orderBy('b.departureTime', 'ASC')
            ->getQuery()
            ->getResult();

        return $resultArray;
    }

    /**
     * @param  AcademicYear $academicYear
     * @return array
     */
    public function findAllBussesByAcademicYear(AcademicYear $academicYear)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        $resultArray = $query->select('b')
            ->from('PromBundle\Entity\Bus', 'b')
            ->where($query->expr()->eq('b.academicYear', ':academicYear'))
            ->setParameter('academicYear', $academicYear)
            ->orderBy('b.departureTime', 'ASC')
            ->getQuery()
            ->getResult();

        return $resultArray;
    }
}
