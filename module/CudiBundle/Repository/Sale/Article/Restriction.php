<?php

namespace CudiBundle\Repository\Sale\Article;

use CudiBundle\Entity\Sale\Article,
    CommonBundle\Component\Doctrine\ORM\EntityRepository;

/**
 * Restriction
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Restriction extends EntityRepository
{
    public function findAllByArticleQuery(Article $article)
    {
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('r')
            ->from('CudiBundle\Entity\Sale\Article\Restriction', 'r')
            ->innerJoin('r.article', 'a')
            ->innerJoin('a.mainArticle', 'm')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('r.article', ':article'),
                    $query->expr()->eq('a.isHistory', 'false'),
                    $query->expr()->eq('m.isHistory', 'false'),
                    $query->expr()->eq('m.isProf', 'false')
                )
            )
            ->setParameter('article', $article)
            ->getQuery();

        return $resultSet;
    }

    public function findOneByArticleAndType(Article $article, $type)
    {
        $query = $this->_em->createQueryBuilder();
        $resultSet = $query->select('r')
            ->from('CudiBundle\Entity\Sale\Article\Restriction', 'r')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('r.article', ':article'),
                    $query->expr()->eq('r.type', ':type')
                )
            )
            ->setParameter('article', $article)
            ->setParameter('type', $type)
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();

        return $resultSet;
    }
}
