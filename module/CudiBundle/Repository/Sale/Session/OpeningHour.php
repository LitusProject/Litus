<?php

namespace CudiBundle\Repository\Sale\Session;

use DateInterval;
use DateTime;

/**
 * OpeningHour
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OpeningHour extends \CommonBundle\Component\Doctrine\ORM\EntityRepository
{
    /**
     * @return \Doctrine\ORM\Query
     */
    public function findAllActiveQuery()
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('o')
            ->from('CudiBundle\Entity\Sale\Session\OpeningHour', 'o')
            ->where(
                $query->expr()->gte('o.endDate', ':now')
            )
            ->setParameter('now', new DateTime())
            ->orderBy('o.startDate', 'ASC')
            ->getQuery();
    }

    /**
     * @return \Doctrine\ORM\Query
     */
    public function findAllOldQuery()
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('o')
            ->from('CudiBundle\Entity\Sale\Session\OpeningHour', 'o')
            ->where(
                $query->expr()->lt('o.endDate', ':now')
            )
            ->setParameter('now', new DateTime())
            ->orderBy('o.startDate', 'DESC')
            ->getQuery();
    }

    /**
     * @return \Doctrine\ORM\Query
     */
    public function findCurrentWeekQuery()
    {
        $start = new DateTime();
        $start->setTime(0, 0);
        if ($start->format('N') > 5) {
            $start->add(new DateInterval('P' . (8 - $start->format('N')) . 'D'));
        } else {
            $start->sub(new DateInterval('P' . ($start->format('N') - 1) . 'D'));
        }

        $end = clone $start;
        $end->add(new DateInterval('P7D'));

        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('o')
            ->from('CudiBundle\Entity\Sale\Session\OpeningHour', 'o')
            ->where(
                $query->expr()->andX(
                    $query->expr()->gt('o.startDate', ':start'),
                    $query->expr()->lt('o.endDate', ':end')
                )
            )
            ->setParameter('start', $start)
            ->setParameter('end', $end)
            ->orderBy('o.startDate')
            ->getQuery();
    }

    /**
     * @param  DateInterval $interval
     * @return \Doctrine\ORM\Query
     */
    public function findCommingIntervalQuery(DateInterval $interval)
    {
        $start = new DateTime();

        $end = clone $start;
        $end->add($interval);

        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('o')
            ->from('CudiBundle\Entity\Sale\Session\OpeningHour', 'o')
            ->where(
                $query->expr()->andX(
                    $query->expr()->gt('o.endDate', ':start'),
                    $query->expr()->lt('o.startDate', ':end')
                )
            )
            ->setParameter('start', $start)
            ->setParameter('end', $end)
            ->orderBy('o.startDate')
            ->getQuery();
    }

    /**
     * @param  string $interval
     * @return \Doctrine\ORM\Query
     */
    public function findPeriodFromNowQuery($interval = 'P14D')
    {
        $start = new DateTime();

        $end = clone $start;
        $end->setTime(0, 0);
        $end->add(new DateInterval($interval));

        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('o')
            ->from('CudiBundle\Entity\Sale\Session\OpeningHour', 'o')
            ->where(
                $query->expr()->andX(
                    $query->expr()->gt('o.endDate', ':start'),
                    $query->expr()->lt('o.endDate', ':end')
                )
            )
            ->setParameter('start', $start)
            ->setParameter('end', $end)
            ->orderBy('o.startDate')
            ->getQuery();
    }

    /**
     * @return \CudiBundle\Entity\Sale\Session\OpeningHour|null
     */
    public function findCurrent()
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('o')
            ->from('CudiBundle\Entity\Sale\Session\OpeningHour', 'o')
            ->where(
                $query->expr()->andX(
                    $query->expr()->lt('o.startDate', ':now'),
                    $query->expr()->gt('o.endDate', ':now')
                )
            )
            ->setParameter('now', new DateTime())
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();
    }
}
