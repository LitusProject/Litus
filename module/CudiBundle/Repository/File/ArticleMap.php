<?php

namespace CudiBundle\Repository\File;

use CudiBundle\Entity\Article;
use CudiBundle\Entity\File\File as FileEntity;

/**
 * ArticleMap
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleMap extends \CommonBundle\Component\Doctrine\ORM\EntityRepository
{
    /**
     * @param  Article    $article
     * @param  FileEntity $file
     * @return \CudiBundle\Entity\File\ArticleMap|null
     */
    public function findOneByArticleAndFile(Article $article, FileEntity $file)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('m')
            ->from('CudiBundle\Entity\File\ArticleMap', 'm')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('m.file', ':file'),
                    $query->expr()->eq('m.article', ':article')
                )
            )
            ->setParameter('article', $article)
            ->setParameter('file', $file)
            ->setMaxResults(1)
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * @param  Article $article
     * @param  boolean $isProf
     * @return \Doctrine\ORM\Query
     */
    public function findAllPrintableByArticleQuery(Article $article, $isProf = false)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('m')
            ->from('CudiBundle\Entity\File\ArticleMap', 'm')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('m.removed', 'false'),
                    $query->expr()->eq('m.printable', 'true'),
                    $query->expr()->eq('m.article', ':article'),
                    $isProf ? '1=1' : $query->expr()->eq('m.isProf', 'false')
                )
            )
            ->setParameter('article', $article)
            ->getQuery();
    }

    /**
     * @param  Article $article
     * @param  boolean $isProf
     * @return \Doctrine\ORM\Query
     */
    public function findAllByArticleQuery(Article $article, $isProf = false)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('m')
            ->from('CudiBundle\Entity\File\ArticleMap', 'm')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('m.removed', 'false'),
                    $query->expr()->eq('m.article', ':article'),
                    $isProf ? '1=1' : $query->expr()->eq('m.isProf', 'false')
                )
            )
            ->setParameter('article', $article)
            ->getQuery();
    }
}
