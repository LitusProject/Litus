<?php

namespace CudiBundle\Repository;

use Doctrine\ORM\EntityRepository,
	Doctrine\ORM\Query\Expr\Join;

/**
 * Article
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Article extends EntityRepository
{
	public function findAll()
	{
		$query = $this->_em->createQueryBuilder();
		$resultSet = $query->select('a')
			->from('CudiBundle\Entity\Article', 'a')
			->where($query->expr()->eq('a.removed', 'false'))
			->getQuery()
			->getResult();

        return $resultSet;
	}
	
	public function findAllByTitle($title)
	{
		$query = $this->_em->createQueryBuilder();
		$resultSet = $query->select('a')
			->from('CudiBundle\Entity\Article', 'a')
			->where($query->expr()->andX(
					$query->expr()->like($query->expr()->lower('a.title'), ':title'),
					$query->expr()->eq('a.removed', 'false')
				)
			)
			->setParameter('title', '%'.strtolower($title).'%')
			->orderBy('a.title', 'ASC')
			->getQuery()
			->getResult();
			
		return $resultSet;
	}
	
	public function findAllByAuthor($author)
	{
		$query = $this->_em->createQueryBuilder();
		$resultSet = $query->select('a')
			->from('CudiBundle\Entity\Article', 'a')
			->innerJoin('a.metaInfo', 'm', Join::WITH, $query->expr()->like($query->expr()->lower('m.authors'), ':author'))
			->where($query->expr()->eq('a.removed', 'false'))
			->setParameter('author', '%'.strtolower($author).'%')
			->orderBy('a.title', 'ASC')
			->getQuery()
			->getResult();
			
		return $resultSet;
	}
	
	public function findAllByPublisher($publisher)
	{
		$query = $this->_em->createQueryBuilder();
		$resultSet = $query->select('a')
			->from('CudiBundle\Entity\Article', 'a')
			->innerJoin('a.metaInfo', 'm', Join::WITH, $query->expr()->like($query->expr()->lower('m.publishers'), ':publisher'))
			->where($query->expr()->eq('a.removed', 'false'))
			->setParameter('publisher', '%'.strtolower($publisher).'%')
			->orderBy('a.title', 'ASC')
			->getQuery()
			->getResult();
			
		return $resultSet;
	}
}