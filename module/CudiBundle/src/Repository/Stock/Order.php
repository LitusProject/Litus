<?php

namespace CudiBundle\Repository\Stock;

use Doctrine\ORM\EntityRepository,
	Doctrine\ORM\Query\Expr\Join;

/**
 * Order
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Order extends EntityRepository
{
	public function getTotalOrdered($article)
	{
		$query = $this->_em->createQueryBuilder();
		$resultSet = $query->select('i')
			->from('CudiBundle\Entity\Stock\OrderItem', 'i')
			->innerJoin('i.order', 'o', Join::WITH, $query->expr()->andX(
					$query->expr()->eq('i.article', ':article'),
					$query->expr()->eq('o.supplier', ':supplier'),
					$query->expr()->isNotNull('o.date')
				)
			)
			->setParameter('article', $article->getId())
			->setParameter('supplier', $article->getSupplier()->getId())
			->getQuery()
			->getResult();
			
		$total = 0;
		foreach($resultSet as $item)
			$total += $item->getNumber();
			
		return $total;
	}
	
	public function findOneOpenBySupplier($supplier)
	{
		$query = $this->_em->createQueryBuilder();
		$resultSet = $query->select('o')
			->from('CudiBundle\Entity\Stock\Order', 'o')
			->where($query->expr()->andX(
					$query->expr()->eq('o.supplier', ':supplier'),
					$query->expr()->isNull('o.date')
				)
			)
			->setParameter('supplier', $supplier->getId())
			->setMaxResults(1)
			->getQuery()
			->getResult();
			
		if (isset($resultSet[0]))
            return $resultSet[0];

        return null;
	}
}