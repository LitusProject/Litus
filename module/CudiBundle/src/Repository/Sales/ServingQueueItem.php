<?php

namespace CudiBundle\Repository\Sales;

use CudiBundle\Entity\Sales\ServingQueueStatus as QueueStatus,
	CudiBundle\Entity\Sales\Session as SaleSession,
	Doctrine\ORM\EntityRepository;

/**
 * ServingQueueItem
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ServingQueueItem extends EntityRepository
{
    
    public function getQueueNumber(SaleSession $session)
    {
    	$query = $this->_em->createQueryBuilder();
    	$resultSet = $query->select('COUNT(i)')
    		->from('CudiBundle\Entity\Sales\ServingQueueItem', 'i')
    		->where($query->expr()->eq('i.session', ':session'))
    		->setParameter('session', $session->getId())
    		->getQuery()
    		->getResult();
    	
    	if (isset($resultSet[0]))
    		return $resultSet[0][1] + 1;
    	
    	return 1;
    }
    
    public function findAllByStatus(SaleSession $session, QueueStatus $status)
    {
	    $query = $this->_em->createQueryBuilder();
	    $resultSet = $query->select('i')
	    	->from('CudiBundle\Entity\Sales\ServingQueueItem', 'i')
	    	->where($query->expr()->andX(
	    			$query->expr()->eq('i.session', ':session'),
	    			$query->expr()->eq('i.status', ':status')
	    		)
	    	)
	    	->setParameter('session', $session->getId())
	    	->setParameter('status', $status->getId())
	    	->getQuery()
	    	->getResult();
	    
	    return $resultSet;
    }
}