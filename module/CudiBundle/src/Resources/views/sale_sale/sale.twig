{% extends 'sale/base.twig' %}

{% block content %}
	<div class="flashmessage alert alert-error fade" id="loading_queue_error">
		<div class="title">Error</div>
		<div class="content">
			<p>An error occurred while loading the queue.</p>
		</div>
	</div>
	
	<div id="sale">
		<div class="row wrapper">
			<div class="span9 custumer">
				<div class="row title">Current custumer:</div>
				<div class="row name">&nbsp;</div>
				<div class="row actions">
					<button class="btn btn-primary showQueue" data-key="119" data-dismiss="key">Queue - F8</button>
					<button class="btn btn-success concludeSelling" data-key="120" data-dismiss="key">Sell - F9</button>
					<button class="btn btn-danger cancelSelling" data-key="121" data-dismiss="key">Cancel - F10</button>
				</div>
			</div>
			<div class="span3 money">
				<div class="total">
					&euro; <span id="totalMoney">0.00</span>
				</div>
				<div>
					Payed: &euro; <span id="payedMoney">0.00</span>
				</div>
				<div>
					Change: &euro; <span id="changeMoney">0.00</span>
				</div>
			</div>
		</div>
		<table class="table table-striped table-bordered">
			<thead>
				<tr>
					<th>Barcode</th>
					<th>Title</th>
					<th>Status</th>
					<th>Number</th>
					<th>Price</th>
					<th class="actions">Action</th>
				</tr>
			</thead>
			
			<tbody class="articles"></tbody>
		</table>
		
		<div id="modalCancelSelling" class="modal fade">
			<div class="modal-header">
				<a class="close" data-dismiss="modal">&times;</a>
				<h3>Cancel Selling</h3>
			</div>
			<div class="modal-body">
				Are you sure you want to cancel this selling? All changes will be lost.
			</div>
			<div class="modal-footer">
				<button class="btn btn-danger confirmCancel" data-key="122">Ok - F11</button>
				<button class="btn" data-dismiss="modal">Close</button>
			</div>
		</div>
		
		<div id="modalConcludeSelling" class="modal fade">
			<div class="modal-header">
				<a class="close" data-dismiss="modal">&times;</a>
				<h3>Confirm Selling</h3>
			</div>
			<div class="modal-body">
				Do you want to confirm the selling? After this it cannot be undone.
			</div>
			<div class="modal-footer">
				<button class="btn btn-success confirmConclude" data-key="122">Ok - F11</button>
				<button class="btn" data-dismiss="modal">Close</button>
			</div>
		</div>
		
		<div id="modalUnableToAdd" class="modal fade">
			<div class="modal-header">
				<a class="close" data-dismiss="modal">&times;</a>
				<h3>Error</h3>
			</div>
			<div class="modal-body">
				The article can not be sold. It was not booked or assigned. 
			</div>
			<div class="modal-footer">
				<button class="btn" data-dismiss="modal">Close</button>
			</div>
		</div>
	</div>
	<div id="queueModal" class="modal fade">
		<div class="modal-header">
			<a class="close" data-dismiss="modal">&times;</a>
			<h3>Queue</h3>
		</div>
		<div class="modal-body">
			<table class="table table-striped table-bordered">
				<thead>
					<tr>
						<th class="number">Num</th>
						<th class="name">Name</th>
						<th class="status">Status</th>
						<th class="actions">Action</th>
					</tr>
				</thead>
				
				<tbody id="queueList"></tbody>
			</table>
		</div>
		<div class="modal-footer">
			<button id="startCollectingNext" class="btn btn-success" data-key="118">Print next - F7</button>
		</div>
	</div>
{% endblock %}

{% block controller_script %}
	<script type="text/javascript">
		$('#queueModal').permanentModal('open');

		$(document).ready(function () {
			$('.showQueue').click(function () {
				$('#queueModal').permanentModal('open', {closable: true});
			});
			
			$('#startCollectingNext').click(function () {
				$('#queueList .startCollecting:first').click();
			});
			
			$('#queueList').showQueue({
				url             : '{{ socketUrl }}',
				errorDialog     : $('#loading_queue_error'),
				statusTranslate : function (status) {
					switch (status) {
						case 'signed_in':
							return 'Signed In';
						case 'collecting':
							return 'Collecting';
						case 'collected':
							return 'Collected';
						case 'selling':
							return 'Selling';
						case 'hold':
							return 'Hold';
					}
				},
				openSale		: function (socketName, data) {
					$('#sale').sale({
						socketName: socketName,
						data: data,
						modal: $('#queueModal'),
						statusTranslate: function (status) {
							switch (status) {
								case 'booked':
									return 'Not Assigned';
								case 'assigned':
									return 'Assigned';
							}
						}
					});
				},
				closeSale		: function () {
					$('#sale').sale('close');
				}
			});			
		});
	</script>
{% endblock %}