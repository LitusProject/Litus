<?php

namespace CommonBundle\Repository\Users\People;

use Doctrine\ORM\EntityRepository;

/**
 * Academic
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Academic extends \CommonBundle\Repository\Users\Person
{
    public function findAllByUsername($username)
    {
    	$query = $this->_em->createQueryBuilder();
    	$resultSet = $query->select('p')
    		->from('CommonBundle\Entity\Users\People\Academic', 'p')
    		->where(
    			$query->expr()->like('p.username', ':username')
    		)
    		->setParameter('username', '%' . strtolower($username) . '%')
    		->getQuery()
    		->getResult();
    	
    	return $resultSet;
    }
    
	public function findAllByUniversityIdentification($universityIdentification)
	{
		$query = $this->_em->createQueryBuilder();
		$resultSet = $query->select('a')
			->from('CommonBundle\Entity\Users\People\Academic', 'a')
			->where(
				$query->expr()->like('a.universityIdentification', ':universityIdentification')
			)
			->setParameter('universityIdentification', '%' . strtolower($universityIdentification) . '%')
			->getQuery()
			->getResult();
		
		return $resultSet;
	}
	
	public function findOneByUsername($username)
	{
		$query = $this->_em->createQueryBuilder();
		$resultSet = $query->select('p')
			->from('CommonBundle\Entity\Users\People\Academic', 'p')
			->where(
			    $query->expr()->orX(
    			    $query->expr()->eq('p.username', ':username'),
    			    $query->expr()->eq('p.universityIdentification', ':username')
			    )
			)
			->setParameter('username', $username)
			->setMaxResults(1)
			->getQuery()
			->getResult();
		
		if (isset($resultSet[0]))
	        return $resultSet[0];
	    
	    $barcode = $this->_em
	        ->getRepository('CommonBundle\Entity\Users\Barcode')
	        ->findOneByBarcode($username);
	    
	    if ($barcode)
	        return $barcode->getPerson();
	    
	    return null;
	}
}