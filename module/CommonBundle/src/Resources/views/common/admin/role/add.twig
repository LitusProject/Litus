{% extends 'admin/base.twig' %}

{% block content %}
	{% include 'common/admin/role/partials/navigation.twig' %}

	{% include 'admin/partials/flashMessenger.twig' %}

	<div id="controller_action">
        {% import 'admin/partials/form.twig' as forms %}
        {{ forms.renderForm(form) }}
	</div>
{% endblock %}

{% block content_script %}
    <script type="text/javascript">
        (function($) {
            var methods = {
                init: function() {
                    var div = $('<div>').insertAfter(this).css({
                        'max-height': '300px',
                        'width': $(this).width(),
                        'overflow': 'scroll',
                        'border': '1px solid #ccc',
                        'padding': '5px',
                    }).append(
                        ul = $('<ul/>')
                    );

                    $(this).children('optgroup').each(function () {
                        var li = $('<li>', {'class': 'parent'}).append(
                            $('<label>').append(
                                $('<input>', {'type': 'checkbox', 'class': 'parent'}).change(function() {
                                    if ($(this).is(':checked')) {
                                        $(this).closest('li').find('ul input').prop('checked', true).trigger('change');
                                    } else {
                                        $(this).closest('li').find('ul input').prop('checked', false).trigger('change');
                                    }
                                }).bind('update', function () {
                                    var total = $(this).closest('li').find('ul input').length;
                                    var checked = $(this).closest('li').find('ul input:checked').length;
                                    if (total == checked) {
                                        $(this).prop('checked', true).prop('indeterminate', false);
                                    } else if (checked == 0) {
                                        $(this).prop('checked', false).prop('indeterminate', false);
                                    } else {
                                        $(this).prop('indeterminate', true);
                                    }
                                }).css({
                                    'vertical-align': 'middle',
                                    'position': 'relative',
                                    'bottom': '2px',
                                    'margin-right': '4px',

                                }),
                                $(this).attr('label')
                            ),
                            subUl = $('<ul/>').css({
                                'margin-left': '10px',
                            })
                        ).appendTo(ul);

                        $(this).children('option').each(function(index) {
                            var option = $(this);

                            $('<li>').append(
                                $('<label>').append(
                                    checkbox = $('<input>', {'type': 'checkbox'}).change(function() {
                                        if ($(this).is(':checked')) {
                                            option.attr('selected', 'selected');
                                        } else {
                                            option.removeAttr('selected');
                                        }
                                        $(this).closest('li.parent').find('input.parent').trigger('update')
                                    }).css({
                                        'vertical-align': 'middle',
                                        'position': 'relative',
                                        'bottom': '2px',
                                        'margin-right': '4px',

                                    }),
                                    option.text()
                                )
                            ).appendTo(subUl)

                            if (option.is(':selected'))
                                checkbox.attr('checked', 'checked').trigger('change');
                        });
                    });
                    $(this).hide();
                }
            };

            $.fn.multiSelectToCheckboxes = function(method) {
                if (methods[method]) {
                    return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
                } else if (typeof method === 'object' || !method) {
                    return methods.init.apply(this, arguments);
                } else {
                    $.error('Method ' + method + ' does not exist on $.multiSelectToCheckboxes');
                }

            };

        })(jQuery);

        $(document).ready(function () {
            $('#actions').multiSelectToCheckboxes();
        });
    </script>
{% endblock %}