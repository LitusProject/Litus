<?php

namespace BrBundle\Repository\Cv;

use CommonBundle\Entity\General\AcademicYear;
use CommonBundle\Entity\User\Person\Academic;
use SyllabusBundle\Entity\Group;
use SyllabusBundle\Entity\Study;

/**
 * Entry
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Entry extends \CommonBundle\Component\Doctrine\ORM\EntityRepository
{
    /**
     * @param  AcademicYear $academicYear
     * @return \Doctrine\ORM\Query
     */
    public function findAllByAcademicYearQuery(AcademicYear $academicYear)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('e')
            ->from('BrBundle\Entity\Cv\Entry', 'e')
            ->where(
                $query->expr()->eq('e.year', ':year')
            )
            ->setParameter('year', $academicYear)
            ->orderBy('e.lastName', 'ASC')
            ->addOrderBy('e.firstName', 'ASC')
            ->getQuery();
    }

    /**
     * @param  AcademicYear $academicYear
     * @param  Academic     $academic
     * @return \Doctrine\ORM\Query
     */
    public function findOneByAcademicAndAcademicYear(AcademicYear $academicYear, Academic $academic)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('e')
            ->from('BrBundle\Entity\Cv\Entry', 'e')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('e.year', ':year'),
                    $query->expr()->eq('e.academic', ':academic')
                )
            )
            ->setParameter('year', $academicYear)
            ->setParameter('academic', $academic->getId())
            ->getQuery()
            ->getOneOrNullResult();
    }

    /**
     * @param  AcademicYear $academicYear
     * @return \Doctrine\ORM\Query
     */
    public function findAllUngroupedStudiesQuery(AcademicYear $academicYear)
    {
        $subQuery = $this->getEntityManager()->createQueryBuilder();
        $subQuery->select('e')
            ->from('BrBundle\Entity\Cv\Entry', 'e')
            ->where(
                $subQuery->expr()->eq('e.study', 's')
            );

        $groupQuery = $this->getEntityManager()->createQueryBuilder();
        $groupQuery->select('g')
            ->from('SyllabusBundle\Entity\Group\StudyMap', 'g')
            ->innerJoin('g.group', 'd')
            ->where(
                $groupQuery->expr()->andX(
                    $groupQuery->expr()->eq('g.study', 's'),
                    $groupQuery->expr()->eq('d.cvBook', 'true')
                )
            );

        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('s')
            ->from('SyllabusBundle\Entity\Study', 's')
            ->innerJoin('s.combination', 'c')
            ->where(
                $query->expr()->andX(
                    $query->expr()->exists(
                        $subQuery->getDql()
                    ),
                    $query->expr()->not(
                        $query->expr()->exists(
                            $groupQuery->getDql()
                        )
                    ),
                    $query->expr()->eq('s.academicYear', ':academicYear')
                )
            )
            ->setParameter('academicYear', $academicYear)
            ->orderBy('c.title', 'ASC')
            ->getQuery();
    }

    /**
     * @param  Group        $group
     * @param  AcademicYear $academicYear
     * @return \Doctrine\ORM\Query
     */
    public function findAllByGroupAndAcademicYearQuery(Group $group, AcademicYear $academicYear)
    {
        $subQuery = $this->getEntityManager()->createQueryBuilder();
        $subQuery->select('g')
            ->from('SyllabusBundle\Entity\Group\StudyMap', 'g')
            ->where(
                $subQuery->expr()->andX(
                    $subQuery->expr()->eq('g.study', 's'),
                    $subQuery->expr()->eq('g.group', ':group')
                )
            );

        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('e')
            ->from('BrBundle\Entity\Cv\Entry', 'e')
            ->innerJoin('e.study', 's')
            ->where(
                $query->expr()->andX(
                    $query->expr()->exists($subQuery->getDql()),
                    $query->expr()->eq('e.year', ':year')
                )
            )
            ->setParameter('group', $group)
            ->setParameter('year', $academicYear)
            ->orderBy('e.lastName', 'ASC')
            ->addOrderBy('e.firstName', 'ASC')
            ->getQuery();
    }

    /**
     * @param  Study $study
     * @return \Doctrine\ORM\Query
     */
    public function findAllByStudyQuery(Study $study)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('e')
            ->from('BrBundle\Entity\Cv\Entry', 'e')
            ->where(
                $query->expr()->andX(
                    $query->expr()->eq('e.study', ':study'),
                    $query->expr()->eq('e.year', ':year')
                )
            )
            ->setParameter('study', $study)
            ->setParameter('year', $study->getAcademicYear())
            ->orderBy('e.lastName', 'ASC')
            ->addOrderBy('e.firstName', 'ASC')
            ->getQuery();
    }
}
