<?php

namespace BrBundle\Repository\Invoice;

use BrBundle\Entity\Collaborator;
use BrBundle\Entity\Company;

/**
 * Manual
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Manual extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return \Doctrine\Common\Collections\ArrayCollection
     */
    public function findInvoiceAuthors()
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('DISTINCT(i.author)')
            ->from('BrBundle\Entity\Invoice\Manual', 'i')
            ->getQuery()
            ->getResult();
    }

    /**
     * @return \Doctrine\Common\Collections\ArrayCollection
     */
    public function findInvoiceCompanies()
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('DISTINCT(i.company)')
            ->from('BrBundle\Entity\Invoice\Manual', 'i')
            ->getQuery()
            ->getResult();
    }

    /**
     * @param  Collaborator $person
     * @return \Doctrine\ORM\Query
     */
    public function findAllByAuthor(Collaborator $person)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('i')
            ->from('BrBundle\Entity\Invoice\Manual', 'i')
            ->where(
                $query->expr()->eq('i.author', ':person')
            )
            ->setParameter('person', $person)
            ->getQuery()
            ->getResult();
    }

    /**
     * @param  Company $company
     * @return \Doctrine\ORM\Query
     */
    public function findAllByCompany(Company $company)
    {
        $query = $this->getEntityManager()->createQueryBuilder();
        return $query->select('i')
            ->from('BrBundle\Entity\Invoice\Manual', 'i')
            ->where(
                $query->expr()->eq('i.company', ':company')
            )
            ->setParameter('company', $company)
            ->getQuery()
            ->getResult();
    }
}
