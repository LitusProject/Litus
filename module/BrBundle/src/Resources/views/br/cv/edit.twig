{% extends 'site/base.twig' %}
{% block content %}
    <div class="row-fluid page">
        <div class="span12">
            <div class="page-header">
                <h1>{{ translate('Edit CV Book') }}</h1>
            </div>

            {% if not form %}
                {% for message in messages %}
                {% autoescape false %}
                    {{ translate(message)|replace({"{{editurl}}" : url('account', {action: 'edit', return: 'cv_index'})}) }}
                {% endautoescape %}
                {% endfor %}
            {% else %}

                {{ translate('The following data from your account will be updated in the CV Book:') }}

                <dl class="dl-horizontal wide">
                    <dt>{{ translate('Name') }}</dt>
                    <dd>{{ authenticatedPerson.getFullName() }}&nbsp;</dd>
                    <dt>{{ translate('Birthday') }}</dt>
                    <dd>{{ dateLocalized(authenticatedPerson.getBirthday(), 'd MMMM y') }}&nbsp;</dd>
                    <dt>{{ translate('Sex') }}</dt>
                    <dd>{{ authenticatedPerson.getSex()|capitalize }}&nbsp;</dd>
                    <dt>{{ translate('Phone Number') }}</dt>
                    <dd>{{ authenticatedPerson.getPhoneNumber() }}&nbsp;</dd>
                    <dt>{{ translate('E-mail') }}</dt>
                    <dd>{{ authenticatedPerson.getPersonalEmail() }}&nbsp;</dd>
                    <dt>{{ translate('Secondary Address&mdash;Home') }}</dt>
                    <dd>
                        {{ authenticatedPerson.getSecondaryAddress().getStreet() }} {{ authenticatedPerson.getSecondaryAddress().getNumber() }}
                        {% if authenticatedPerson.getSecondaryAddress().getMailbox() %}
                            / {{ authenticatedPerson.getSecondaryAddress().getMailbox() }}
                        {% endif %}<br>
                        {{ authenticatedPerson.getSecondaryAddress().getPostal() }} {{ authenticatedPerson.getSecondaryAddress().getCity() }}<br>
                        {{ authenticatedPerson.getSecondaryAddress().getCountry() }}
                    </dd>
                    <dt>{{ translate('Profile Picture') }}</dt>
                    <dd>
                        <img width="200" src="{{ url('account', {'action':'photo', 'image': authenticatedPerson.getPhotoPath()}) }}" alt=""/>
                    </dd>
                </dl>

                <strong>

                    <p>{{ translate('Please update your account data if necessary. Note that the data above will be retrieved immediately after creating the entry, so future updates to your profile will not be reflected automatically.')}}</p>

                    <p>{{ translate('You are advised to use your mother tongue for your CV.') }}</p>
                </strong>

                {% import 'site/partials/form.twig' as forms %}
                {{ forms.renderForm(form) }}
            {% endif %}


        </div>
    </div>
{% endblock %}

{% block content_script %}

    <script type="text/javascript">

        function addRemoveButton(i) {
            $('#lang_delete' + i).click(function() {
                $('.lang_control' + i).remove();
            });
        }

        $(document).ready(function() {

            $('.count').each(function() {
                addLabel($(this));
            });

            {% if languageError %}
                $('#language_add').after('\
                    <div class="help-block" style="margin-left:221px;">\
                        <ul>\
                            <li>{{languageError}}</li>\
                        </ul>\
                    </div>');
            {% endif %}

            // Add delete buttons to existing language fields
            var count = parseInt($('#lang_count').val());
            for (i = 1; i < count; i++) {
                $('#lang_name' + i).after('\
                    <button type="button" id="lang_delete' + i + '" class="btn btn-danger" value="">Remove Language</button>'
                );

                $('#lang_name' + i).parent().parent().parent().addClass('lang_control' + i);
                $('#lang_oral' + i).parent().parent().parent().addClass('lang_control' + i);
                $('#lang_written' + i).parent().parent().parent().addClass('lang_control' + i);

                addRemoveButton(i);
            }

            $('#language_add').click(function() {

                var i = parseInt($('#lang_count').val());

                $('#language_add').before('\
                    <div class="control-group lang_control' + i + '">\
                        <label class="control-label" for="lang_name' + i + '">\
                            {{ translate("Language") }}\
                        </label>\
                        <div class="controls">\
                            <div>\
                                <input type="text" class"count" data-count=30 name="lang_name' + i + '" id="lang_name' + i + '" value=""/>\
                                <button type="button" id="lang_delete' + i + '" class="btn btn-danger" value="">{{ translate("Remove Language") }}</button>\
                            </div>\
                        </div>\
                    </div>\
                    <div class="control-group lang_control' + i + '">\
                        <label class="control-label" for="lang_oral' + i + '">\
                            {{ translate("Oral Skills") }}\
                        </label>\
                        <div class="controls">\
                            <div>\
                                <select name="lang_oral' + i + '" id="lang_oral' + i + '">\
                                    {% for key,value in oral_skills %}
                                        <option value="{{key}}">{{ translate(value) }}</option>\
                                    {% endfor %}
                                </select>\
                            </div>\
                        </div>\
                    </div>\
                    <div class="control-group lang_control' + i + '">\
                        <label class="control-label" for="lang_written' + i + '">\
                            {{ translate("Written Skills") }}\
                        </label>\
                        <div class="controls">\
                            <div>\
                                <select name="lang_written' + i + '" id="lang_written' + i + '">\
                                    {% for key,value in written_skills %}
                                        <option value="{{key}}">{{ translate(value) }}</option>\
                                    {% endfor %}
                                </select>\
                            </div>\
                        </div>\
                    </div>'
                );

                addLabel($('#lang_name' + i));

                addRemoveButton(i);

                $('#lang_count').val(i + 1);
            });

        });

        function updateButton() {
            var enabled = true;
            $('.count').each(function() {
                var max = $(this).attr('data-count');
                if (getLength($(this)) > max)
                    enabled = false;
            });
            if (enabled) {
                $("#submit").removeAttr("disabled");
            } else {
                $("#submit").attr("disabled", "disabled");
            }
        }

        function addLabel(element) {
            var label = $('.control-label[for=' + element.attr('id') + ']');
            label.append('<br/>(<span class="count-label"></span>)');
            updateLabel(element);
            element.bind("propertychange keyup input paste", function() {
                updateLabel($(this));
            });
        }

        function updateLabel(element) {
            var label = $('.control-label[for=' + element.attr('id') + ']');
            var max = element.attr('data-count');
            var cnt = max - getLength(element);
            var el = label.find('.count-label');
            if (cnt < 0)
                el.addClass('count-negative');
            else
                el.removeClass('count-negative');
            el.html(cnt);
            updateButton();
        }

        function getLength(element) {
            var val = element.val();
            val = val.replace(/\r\n|\r|\n/g,Array(76).join(" ")); // Newlines count as 75 characters
            return val.length;
        }

    </script>
}

{% endblock %}