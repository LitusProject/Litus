{% extends 'site/base.twig' %}

{% block content %}
    <div class="page-header">
        {% block download %}{% endblock %}

        <h1>{% block title %}{{ translate('CV Book') }}{% endblock %}</h1>
    </div>

    {% if messages %}
        {% for flashMessage in messages %}
            <div class="flashmessage alert alert-{{ flashMessage.getType() }} fade in">
                <a class="close" data-dismiss="alert">&times;</a>
                {{ translate(flashMessage.getMessage())|replace({"{{editurl}}" : url('common_account', {action: 'edit', return: 'br_cv_index'})})|raw }}
            </div>
        {% endfor %}
    {% else %}
        {% block intro_message %}
            {{ translate('The following data from your account will be used in the CV Book:') }}
        {% endblock %}

        <dl class="dl-horizontal wide">
            <dt>{{ translate('Name') }}</dt>
            <dd>{{ authenticatedPerson.getFullName() }}&nbsp;</dd>
            <dt>{{ translate('Birthday') }}</dt>
            <dd>{{ dateLocalized(authenticatedPerson.getBirthday(), 'd MMMM y') }}&nbsp;</dd>
            <dt>{{ translate('Sex') }}</dt>
            <dd>{{ authenticatedPerson.getSex()|capitalize }}&nbsp;</dd>
            <dt>{{ translate('Phone Number') }}</dt>
            <dd>{{ authenticatedPerson.getPhoneNumber() }}&nbsp;</dd>
            <dt>{{ translate('Email') }}</dt>
            <dd>{{ authenticatedPerson.getPersonalEmail() }}&nbsp;</dd>
            <dt>{{ translate('Address') }}</dt>
            <dd>
                {{ authenticatedPerson.getSecondaryAddress().getStreet() }} {{ authenticatedPerson.getSecondaryAddress().getNumber() }}
                {% if authenticatedPerson.getSecondaryAddress().getMailbox() %}
                    / {{ authenticatedPerson.getSecondaryAddress().getMailbox() }}
                {% endif %}<br>
                {{ authenticatedPerson.getSecondaryAddress().getPostal() }} {{ authenticatedPerson.getSecondaryAddress().getCity() }}<br>
                {{ authenticatedPerson.getSecondaryAddress().getCountry() }}
            </dd>
            <dt>{{ translate('Profile Picture') }}</dt>
            <dd>
                <img width="200" src="{{ profilePath }}/{{ authenticatedPerson.getPhotoPath() }}" alt=""/>
            </dd>
        </dl>

        <strong>
            <p>{{ translate('Please update your account data if necessary. Note that the data above will be retrieved immediately after creating the entry, so future updates to your profile will not be reflected automatically.')}}</p>

            <p>{{ translate('You are advised to use your mother tongue for your CV.') }}</p>
        </strong>

        {% import 'site/partials/form.twig' as forms %}
        {{ forms.renderForm(form) }}
    {% endif %}
{% endblock %}

{% block content_script %}
    <script type="text/javascript">
        var languageCount = 0;
        var experienceCount = 0;
        $(document).ready(function () {
            while ($('input[name="languages[' + (languageCount) + '][language_name]"]').length) {
                languageCount++;
            }

            if (languageCount == 0 || $('input[name="languages[' + (languageCount - 1) + '][language_name]"]').val().length > 0) {
                addLanguage();
            } else {
                $('input[name="languages[' + (languageCount - 1) + '][language_name]"]').keyup(triggerKeyUpLanguage);
            }

            console.log($('input[name="capabilities[experiences][' + (experienceCount) + '][experience_function]"]'))
            while ($('input[name="capabilities[experiences][' + (experienceCount) + '][experience_function]"]').length) {
                experienceCount++;
            }

            if (experienceCount == 0 || $('input[name="capabilities[experiences][' + (experienceCount - 1) + '][experience_function]"]').val().length > 0) {
                addExperience();
            } else {
                $('input[name="capabilities[experiences][' + (experienceCount - 1) + '][experience_function]"]').keyup(triggerKeyUpExperience);
            }
        });

        function triggerKeyUpLanguage() {
            if ($(this).val().length > 0) {
                $(this).unbind('keyup');
                addLanguage();
            }
        }

        function triggerKeyUpExperience() {
            if ($(this).val().length > 0) {
                $(this).unbind('keyup');
                addExperience();
            }
        }

        function addLanguage() {
            if (languageCount >= 4)
                return;
            var template = $('#data-template-languages').data('template');
            template = template.replace(/__index__/g, languageCount);
            languageCount++;

            $('form > fieldset#languages').append(template);
            $('fieldset[name="languages[' + (languageCount - 1) + ']"] .count').each(function() {
                $(this).fieldCount()
            });
            $('input[name="languages[' + (languageCount - 1) + '][language_name]"]').keyup(triggerKeyUpLanguage);
        }

        function addExperience() {
            if (experienceCount >= 4)
                return;
            var template = $('#data-template-capabilities\\[experiences\\]').data('template');
            template = template.replace(/__index__/g, experienceCount);
            experienceCount++;

            $('form > fieldset > fieldset#capabilities\\[experiences\\]').append(template);
            $('fieldset[name="capabilities[experiences][' + (experienceCount - 1) + ']"] .count').each(function() {
                $(this).fieldCount()
            });
            $('input[name="capabilities[experiences][' + (experienceCount - 1) + '][experience_function]"]').keyup(triggerKeyUpExperience);
            if (experienceCount == 1) {
                $('form > fieldset > fieldset > fieldset#capabilities\\[experiences\\] > legend').hide();
            }
        }
    </script>
{% endblock %}
