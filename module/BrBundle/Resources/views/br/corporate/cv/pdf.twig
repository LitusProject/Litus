{% extends 'corporate/partials/cv.twig' %}
{% block cv_content %}
{% endblock %}

{% block content_script %}
    <script type="module">
        
        console.log(location.pathname);
        const pdfPath = "";

        const loadingTask = pdfjsLib.getDocument(pdfPath);
        loadingTask.promise
            .then(function (doc) {
                const numPages = doc.numPages;
                console.log("# Document Loaded");
                console.log("Number of Pages: " + numPages);
                console.log();

                let lastPromise; // will be used to chain promises
                lastPromise = doc.getMetadata().then(function (data) {
                    console.log("# Metadata Is Loaded");
                    console.log("## Info");
                    console.log(JSON.stringify(data.info, null, 2));
                    console.log();
                    if (data.metadata) {
                        console.log("## Metadata");
                        console.log(JSON.stringify(data.metadata.getAll(), null, 2));
                        console.log();
                    }
                });

                const loadPage = function (pageNum) {
                    return doc.getPage(pageNum).then(function (page) {
                        console.log("# Page " + pageNum);
                        const viewport = page.getViewport({ scale: 1.0 });
                        console.log("Size: " + viewport.width + "x" + viewport.height);
                        console.log();
                        return page
                            .getTextContent()
                            .then(function (content) {
                                // Content contains lots of information about the text layout and
                                // styles, but we need only strings at the moment
                                const strings = content.items.map(function (item) {
                                    return item.str;
                                });
                                console.log("## Text Content");
                                console.log(strings.join(" "));
                                // Release page resources.
                                page.cleanup();
                            })
                            .then(function () {
                                console.log();
                            });
                    });
                };
                // Loading of the first page will wait on metadata and subsequent loadings
                // will wait on the previous pages.
                for (let i = 1; i <= numPages; i++) {
                    lastPromise = lastPromise.then(loadPage.bind(null, i));
                }
                return lastPromise;
            })
            .then(
                function () {
                    console.log("# End of Document");
                },
                function (err) {
                    console.error("Error: " + err);
                }
            );
    </script>
{% endblock %}