<?php

namespace Litus\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class LitusEntityBrContractsContractProxy extends \Litus\Entity\Br\Contracts\Contract implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getTitle()
    {
        $this->__load();
        return parent::getTitle();
    }

    public function setTitle($title)
    {
        $this->__load();
        return parent::setTitle($title);
    }

    public function getParts()
    {
        $this->__load();
        return parent::getParts();
    }

    public function addSection(\Litus\Entity\Br\Contracts\Section $section, $order)
    {
        $this->__load();
        return parent::addSection($section, $order);
    }

    public function getAuthor()
    {
        $this->__load();
        return parent::getAuthor();
    }

    public function setAuthor(\Litus\Entity\Users\Person $author)
    {
        $this->__load();
        return parent::setAuthor($author);
    }

    public function getCompany()
    {
        $this->__load();
        return parent::getCompany();
    }

    public function setCompany(\Litus\Entity\Users\People\Company $company)
    {
        $this->__load();
        return parent::setCompany($company);
    }

    public function getDate()
    {
        $this->__load();
        return parent::getDate();
    }

    public function setDate(\DateTime $date = NULL)
    {
        $this->__load();
        return parent::setDate($date);
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setDiscount($discount)
    {
        $this->__load();
        return parent::setDiscount($discount);
    }

    public function getDiscount()
    {
        $this->__load();
        return parent::getDiscount();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'sections', 'date', 'author', 'company', 'title', 'discount');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}