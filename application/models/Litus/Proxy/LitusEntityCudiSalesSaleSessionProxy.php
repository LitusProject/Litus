<?php

namespace Litus\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class LitusEntityCudiSalesSaleSessionProxy extends \Litus\Entity\Cudi\Sales\SaleSession implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function setId($id_)
    {
        $this->__load();
        return parent::setId($id_);
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setOpenDate($openDate_)
    {
        $this->__load();
        return parent::setOpenDate($openDate_);
    }

    public function getOpenDate()
    {
        $this->__load();
        return parent::getOpenDate();
    }

    public function setCloseDate($closeDate_)
    {
        $this->__load();
        return parent::setCloseDate($closeDate_);
    }

    public function getCloseDate()
    {
        $this->__load();
        return parent::getCloseDate();
    }

    public function setOpenAmount($openAmount_)
    {
        $this->__load();
        return parent::setOpenAmount($openAmount_);
    }

    public function getOpenAmount()
    {
        $this->__load();
        return parent::getOpenAmount();
    }

    public function setCloseAmount($closeAmount_)
    {
        $this->__load();
        return parent::setCloseAmount($closeAmount_);
    }

    public function getCloseAmount()
    {
        $this->__load();
        return parent::getCloseAmount();
    }

    public function setManager($manager_)
    {
        $this->__load();
        return parent::setManager($manager_);
    }

    public function getManager()
    {
        $this->__load();
        return parent::getManager();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'openDate', 'closeDate', 'openAmount', 'closeAmount', 'manager');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}